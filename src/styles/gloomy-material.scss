@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// **Be sure that you only ever include this mixin once!**
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$gloomy-light-mat-primary: mat-palette($mat-indigo);
$gloomy-light-mat-accent:  mat-palette($mat-pink, A200, A100, A400);
// The warn palette is optional (defaults to red).
$gloomy-light-mat-warn:    mat-palette($mat-red);
// Create the theme object (a Sass map containing all of the palettes).
$gloomy-light-mat-theme: mat-light-theme($gloomy-light-mat-primary, $gloomy-light-mat-accent, $gloomy-light-mat-warn);


// Define an alternate dark theme.
$gloomy-dark-mat-primary: mat-palette($mat-blue-grey);
$gloomy-dark-mat-accent:  mat-palette($mat-amber, A200, A100, A400);
$gloomy-dark-mat-warn:    mat-palette($mat-deep-orange);
$gloomy-dark-mat-theme:   mat-dark-theme($gloomy-dark-mat-primary, $gloomy-dark-mat-accent, $gloomy-dark-mat-warn);

// Include the default theme styles.
@include angular-material-theme($gloomy-dark-mat-theme);

// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.gloomy-light-theme {
  @include angular-material-theme($gloomy-light-mat-theme);
}
